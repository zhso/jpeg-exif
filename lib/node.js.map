{"version":3,"sources":["../src/node.js"],"names":["sync","file","Error","buffer","fs","readFileSync","async","callback","data","Promise","resolve","reject","readFile","err","buf","slice","SOIMarkerLength","e","error","undefined","then","d","catch","exports","parse","parseSync","fromBuffer"],"mappings":";;AAAA;;;;AAEA;;;;AAEA;;;;;;;AAOA,IAAMA,OAAO,SAAPA,IAAO,CAACC,IAAD,EAAU;AACrB,MAAI,CAACA,IAAL,EAAW;AACT,UAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,MAAMC,SAASC,aAAGC,YAAH,CAAgBJ,IAAhB,CAAf;;AAEA,SAAO,uBAAWE,MAAX,CAAP;AACD,CARD;;AAUA;;;;;;;;;;;;;AAaA,IAAMG,QAAQ,SAARA,KAAQ,CAACL,IAAD,EAAOM,QAAP,EAAoB;AAChC,MAAIC,aAAJ;;AAEA,MAAIC,OAAJ,CACE,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnB,QAAI,CAACV,IAAL,EAAW;AACTU,aAAO,IAAIT,KAAJ,CAAU,kBAAV,CAAP;AACD;;AAEDE,iBAAGQ,QAAH,CAAYX,IAAZ,EAAkB,UAACY,GAAD,EAAMV,MAAN,EAAiB;AACjC,UAAIU,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD,OAFD,MAEO;AACL,YAAI;AACF,cAAI,oBAAQV,MAAR,CAAJ,EAAqB;AACnB,gBAAMW,MAAMX,OAAOY,KAAP,CAAaC,sBAAb,CAAZ;;AAEAR,mBAAO,wBAAYM,GAAZ,CAAP;;AAEAJ,oBAAQF,IAAR;AACD,WAND,MAMO,IAAI,mBAAOL,MAAP,CAAJ,EAAoB;AACzBK,mBAAO,wBAAYL,MAAZ,EAAoB,KAApB,CAAP;;AAEAO,oBAAQF,IAAR;AACD,WAJM,MAIA;AACLG,mBAAO,IAAIT,KAAJ,CAAU,wBAAV,CAAP;AACD;AACF,SAdD,CAcE,OAAOe,CAAP,EAAU;AACVN,iBAAOM,CAAP;AACD;AACF;AACF,KAtBD;AAuBD,GA7BH,EA8BE,UAACC,KAAD,EAAW;AACTX,aAASW,KAAT,EAAgBC,SAAhB;AACD,GAhCH,EAkCGC,IAlCH,CAkCQ,UAACC,CAAD,EAAO;AACXd,aAASY,SAAT,EAAoBE,CAApB;AACD,GApCH,EAqCGC,KArCH,CAqCS,UAACJ,KAAD,EAAW;AAChBX,aAASW,KAAT,EAAgBC,SAAhB;AACD,GAvCH;AAwCD,CA3CD;;AA6CAI,QAAQC,KAAR,GAAgBlB,KAAhB;AACAiB,QAAQE,SAAR,GAAoBzB,IAApB;AACAuB,QAAQG,UAAR,GAAqBA,iBAArB","file":"node.js","sourcesContent":["import fs from 'fs';\n\nimport { isValid, isTiff, fromBuffer, APPnHandler, EXIFHandler, SOIMarkerLength } from './index'\n\n/**\n * @param file {String}\n * @returns {Object}\n * @example\n * var exif = sync(\"~/Picture/IMG_1981.JPG\");\n * console.log(exif.createTime);\n */\nconst sync = (file) => {\n  if (!file) {\n    throw new Error('File not found');\n  }\n\n  const buffer = fs.readFileSync(file);\n\n  return fromBuffer(buffer);\n};\n\n/**\n * @param file {String}\n * @param callback {Function}\n * @example\n * async(\"~/Picture/IMG_0707.JPG\", (err, data) => {\n *     if(err) {\n *         console.log(err);\n *     }\n *     if(data) {\n *         console.log(data.ExifOffset.createTime);\n *     }\n * }\n */\nconst async = (file, callback) => {\n  let data;\n\n  new Promise(\n    (resolve, reject) => {\n      if (!file) {\n        reject(new Error('❓File not found.'));\n      }\n\n      fs.readFile(file, (err, buffer) => {\n        if (err) {\n          reject(err);\n        } else {\n          try {\n            if (isValid(buffer)) {\n              const buf = buffer.slice(SOIMarkerLength);\n\n              data = APPnHandler(buf);\n\n              resolve(data);\n            } else if (isTiff(buffer)) {\n              data = EXIFHandler(buffer, false);\n\n              resolve(data);\n            } else {\n              reject(new Error('😱Unsupport file type.'));\n            }\n          } catch (e) {\n            reject(e);\n          }\n        }\n      });\n    },\n    (error) => {\n      callback(error, undefined);\n    }\n  )\n    .then((d) => {\n      callback(undefined, d);\n    })\n    .catch((error) => {\n      callback(error, undefined);\n    });\n};\n\nexports.parse = async;\nexports.parseSync = sync;\nexports.fromBuffer = fromBuffer;\n"]}